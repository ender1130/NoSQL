
Redis  http://redis.io/

Jedis(Java操作redis): https://github.com/xetorthio/jedis

概述:
Redis 是一个开源的使用C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数
据库，并提供多种语言的API。简单说，Redis是一个提供持久化功能的内存数据库。

Redis 是一个开源的高性能键值对数据库。它通过提供多种键值数据类型来适应不同场景
下的存储需求，并借助许多高层级的接口使其可以胜任如缓存、队列系统等不同的角色。
它使用内存提供主存储支持，而仅使用硬盘做持久性的存储。

Redis 是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，
包括string(字符串)、list(链表)、set(集合)、zset(sorted set --有序集合)和hash（哈希类型)。
这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。
在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。
区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现
了master-slave(主从)同步。

持久化:
Redis的强劲性能很大程度上是由于其将所有数据都存储在了内存中，为了使Redis在重
启之后仍能保证数据不丢失，需要将数据从内存中以某种形式同步到硬盘中，这一过程
就是持久化。Redis支持两种方式的持久化，一种是RDB方式，一种是AOF方式。可以单
独使用其中一种或将二者结合使用。RDB是Redis默认采用的持久化方式。

主从复制(master-slave):
主数据库(master)可以进行读写操作，当发生写操作时自动将数据同步给从数据库(slave)。
而从数据库一般是只读的，并接受主数据库同步过来的数据。一个主数据库可以拥有多个从
数据库，而一个从数据库只能拥有一个主数据库。

Redis为单进程单线程模式，采用队列模式将并发访问变成串行访问，且多客户端对Redis的连接并不存在竞争关系。

---------------------------------------------------------------------------------------------------------
Redis提供五种数据类型:
 string，
 hash，
 list，
 set,
 zset(sorted set)。

---------------------------------------------------------------------------------------------------------
Redis的常用场景:
1.取最新N个数据的操作(例如: 排行榜应用)
2.需要精确设定过期时间的应用
3.计数器的应用（新浪微博主要使用)
4.Uniq(唯一)操作，获取某段时间所有数据排除重复值
5.实时系统，反垃圾系统
6.Pub/Sub构建实时消息系统
7.构建队列系统
8.缓存

---------------------------------------------------------------------------------------------------------
Redis的使用注意事项:
1.使用key值前缀来作命名空间
2.注意垃圾回收

---------------------------------------------------------------------------------------------------------
Redis读写性能为什么会更快?
1)绝大部分请求是纯粹的内存操作。
2)采用单线程，避免了线程的上下文切换和竞争。
3)异步非阻塞IO。  
4)数据结构: Redis全程使用hash结构，读取速度快。
5)事件机制: Redis采用自己实现的事件分离器，效率比较高，内部采用非阻塞的执行方式，吞吐能力比较大。

redis用自己实现的事件分离器，代码量很短，没有cas，没有lock。


Redis的持久化操作?
1)RDB，默认, 可以在指定的时间间隔内生成数据集的时间点快照(point-in-time snapshot)。
2)AOF, 记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。

